https://leetcode.com/problems/max-consecutive-ones-iii/description/

class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int n=nums.size();
        int low=0,high=0,ans=0;
        int count_zero=0;
        while(low<=high && high<n){
            if(nums[high]==0){
                count_zero++;
            }
            while(count_zero>k && low<=high){
                if(nums[low]==0){
                    count_zero--;
                }
                low++;
            }
            ans=max(ans,high-low+1);
            high++;
        }
        return ans;
    }
};


//OPTIMISED VERSION 

class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int n=nums.size();
        int l=0,r=0;
        int ans=0;//maximum length
        int zero=0;
        while(r<n){
            if(nums[r]==0)zero++; 
            if(zero>k){
                if(nums[l]==0){
                    zero--;
                }
                l++;
            }
            if(zero<=k)ans=max(ans,r-l+1);
            r++;
        }
        return ans;
    }
};
