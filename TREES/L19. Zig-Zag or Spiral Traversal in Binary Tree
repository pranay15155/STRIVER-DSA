https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/


class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode*>q;
        if(root)q.push(root);
        vector<vector<int>>ans;
        int i=0;
        while(q.size()){
            int size=q.size();
            vector<int>temp;
            for(int i=0;i<size;i++){
                auto node=q.front();
                q.pop();
                temp.push_back(node->val);
                if(node->left)q.push(node->left);
                if(node->right)q.push(node->right);
            }
            if(i&1)reverse(temp.begin(),temp.end());
            ans.push_back(temp);
            i++;
        }
        return ans;
    }
};





class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        int flag=0;
        vector<vector<int>>ans;
        queue<TreeNode*>q;
        q.push(root);
        if (!root) return {};
        while(q.size()){
            int size=q.size();
            vector<int>temp;
            for(int i=0;i<size;i++){
                temp.push_back(q.front()->val);
                if(q.front()->left)q.push(q.front()->left);
                if(q.front()->right)q.push(q.front()->right);
                q.pop();
            }
            if(flag==1)reverse(temp.begin(),temp.end());
            ans.push_back(temp);
            flag=!flag;
        }
        return ans;

    }
};
