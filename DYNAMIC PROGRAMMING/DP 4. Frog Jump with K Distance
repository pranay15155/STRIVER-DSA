https://atcoder.jp/contests/dp/tasks/dp_b


//HAR HAR MAHADEV

#include <bits/stdc++.h>
using namespace std;



int temporary;
int queries=1;
//debug
#ifndef ONLINE_JUDGE
#define dqy(x) cerr <<endl<< "#" <<" "<<x<<"------>"; cerr << endl;
#define d(x) cerr << #x <<" "; _print(x); cerr << endl;
#define d2(x,y) cerr << #x<<" "<<#y <<"  ";_print(x);cerr<<" ";_print(y); cerr << endl;
#define d3(x,y,z) cerr << #x<<" "<<#y<<" "<<#z <<"  ";_print(x);cerr<<" ";_print(y);cerr<<" ";_print(z); cerr << endl;
#define d4(a,b,c,d) cerr << #a<<" "<<#b<<" "<<#c <<" "<<#d<<" ";_print(a);cerr<<" ";_print(b);cerr<<" ";_print(c);cerr<<" ";_print(d); cerr << endl;
#define spc()  cerr << endl;
#else
#define d(x)
#define d2(x,y) 
#define d3(x,y,z) 
#define d4(a,b,c,d) 
#define dqy(x)
#define spc()
#endif

void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(float t) {cerr << t;}

template<class T, class V> void _print(pair <T, V> p);
template<class T> void _print(vector <T> v);
template<class T> void _print(set <T> v);
template<class T, class V> void _print(map <T, V> v);
template<class T> void _print(multiset <T> v);
template<class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template<class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template<class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template<class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template<class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template<class T> void _print(stack<T>s){vector<T>v;while(s.size()){v.push_back(s.top());s.pop();}_print(v);}
template<class T> void _print(queue<T>q){vector<T>v;while(q.size()){v.push_back(q.front());q.pop();}_print(v);}
template<class T> void _print(priority_queue<T>q){vector<T>v;while(q.size()){v.push_back(q.top());q.pop();}_print(v);}
template<class T> void _print(priority_queue<T,vector<T>,greater<T>>q){vector<T>v;while(q.size()){v.push_back(q.top());q.pop();}_print(v);}
template<class T> void _print(deque<T>q){vector<T>v;while(q.size()){v.push_back(q.front());q.pop_front();}_print(v);}


int f(int ind,vector<int>&dp,int n,int k,vector<int>&stones){
	// d(ind)
	if(ind==n-1)return 0;
	if(dp[ind]!=-1)return dp[ind];
	long long ans=LONG_LONG_MAX;
	for(int i=ind+1,j=0;j<k && i<n;i++,j++){ //j is simply here for counting to make coding easy and to understand code faster
		long long temp=abs(stones[ind]-stones[i])+f(i,dp,n,k,stones);
		ans=min(ans,temp);
		// d3(ind,ans,temp)
	}
	return dp[ind]=ans;
}


void pranay_prasoon(){
	int Q=temporary-queries;dqy(Q);

	int n,k;
	cin>>n>>k;
	vector<int>v(n),dp(n+1,-1);
	for (int i = 0; i < n; ++i)
	{
		cin>>v[i];
	}
	cout<<f(0,dp,n,k,v)<<endl;
    d(dp)











}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	freopen("output1.txt", "w", stderr);
#endif // ONLINE_JUDGE

	// cin >> queries;
	queries=1;
	temporary=queries;
	while (queries--)
	{
		pranay_prasoon();
	}
	return 0;
}


