https://www.naukri.com/code360/problems/frog-jump_3621012?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTabValue=PROBLEM

https://www.geeksforgeeks.org/problems/geek-jump/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=geek-jump

#include <bits/stdc++.h> 

int f(int ind,vector<int>&dp,int n,vector<int> &heights){
   if(ind==n-1)return 0;
   if(dp[ind]!=-1)return dp[ind];
   int one=1e8,two=1e8;
   if(ind+1<n)one=abs(heights[ind]-heights[ind+1])+f(ind+1,dp,n,heights);
   if(ind+2<n)two=abs(heights[ind]-heights[ind+2])+f(ind+2,dp,n,heights);
   return dp[ind]=min(one,two);
}
int frogJump(int n, vector<int> &heights)
{
     vector<int>dp(n+1,-1);
     return f(0,dp,n,heights);
}

//////////////////////////////////////MEMOISATION

class Solution {
  public:
    int f(int ind,vector<int>& height,vector<int>& dp){
        if(ind==0)return dp[ind]=0;
        if(dp[ind]!=-1)return dp[ind];
        int ans=1e9;
        if(ind-1>=0)ans=min(ans,f(ind-1,height,dp)+abs(height[ind]-height[ind-1]));
        if(ind-2>=0)ans=min(ans,f(ind-2,height,dp)+abs(height[ind]-height[ind-2]));
        return dp[ind]=ans;

    }
    int minCost(vector<int>& height) {
        int n=height.size();
        vector<int>dp(n,-1);
        int a=f(n-1,height,dp);
        return a;
    }
};


////////////////////////////////////////TABULATION

class Solution {
  public:
    int minCost(vector<int>& height) {
        int n=height.size();
        vector<int>dp(n,0);
        for(int ind=1;ind<n;ind++){
            int ans=1e9;
            if(ind-1>=0)ans=min(ans,dp[ind-1]+abs(height[ind]-height[ind-1]));
            if(ind-2>=0)ans=min(ans,dp[ind-2]+abs(height[ind]-height[ind-2]));
            dp[ind]=ans;
        }
        return dp[n-1];
    }
};


///////////////////////////////////SPACE OPTIMIZATION 

class Solution {
  public:
    int minCost(vector<int>& height) {
        int n=height.size();
        int prev1=0,prev2=0;
        for(int ind=1;ind<n;ind++){
            int ans=1e9;
            if(ind-1>=0)ans=min(ans,prev1+abs(height[ind]-height[ind-1]));
            if(ind-2>=0)ans=min(ans,prev2+abs(height[ind]-height[ind-2]));
            prev2=prev1;
            prev1=ans;
        }
        return prev1;
    }
};
