class Solution {
public:
    long long  f(long long  k,vector<int>& piles, int h){
        long long ans=0;
        for(int i=0;i<piles.size();i++){
            if(piles[i]%k==0)ans+=(piles[i]/k);
            else ans+=((piles[i]/k)+1);
        }
        if(ans<=h)return 1;
        return 0;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int low=1,high=1e9;
        long long ans=1e9;
        while(low<=high){
             long long int mid=low+(high-low)/2;
            if(f(mid,piles,h)==1){
                ans=mid;
                high=mid-1;
            }
            else low=mid+1;
        }
        return ans;
    }
};
