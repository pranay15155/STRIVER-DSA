class Solution {
public:
    int f(int day,vector<int>& bloomday, int m, int k){
      int count=0,ans=0;
      int i=0;
      int n=bloomday.size();
      while(i<n){
        if(bloomday[i]>day){
            count=0;
        }
        else if(bloomday[i]<=day){
            count++;
            if(count==k){
                ans++;
                count=0;
            }
        }
        i++;
      }
      if(ans>=m)return 1;
      return 0;
    }
    int minDays(vector<int>& bloomday, int m, int k) {
        int n=bloomday.size();
        if(m*1ll*k*1ll>n)return -1;
        int low=1,high=*max_element(bloomday.begin(),bloomday.end());
        int ans=high;
        while(low<=high){
            int mid=(low+high)/2;
            if(f(mid,bloomday,m,k)){
                ans=mid;
                high=mid-1;
            }
            else low=mid+1;
        }
        return ans;
    }
};
