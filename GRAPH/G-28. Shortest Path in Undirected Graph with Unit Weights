https://www.geeksforgeeks.org/problems/shortest-path-in-undirected-graph-having-unit-distance/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=shortest-path-in-undirected-graph-having-unit-distance

//SOLVED USING QUEUE OF PAIRS
class Solution {
  public:
    vector<int> shortestPath(vector<vector<int>>& adj, int src) {
        int n=adj.size();
        vector<int>dist(n,-1);
        queue<pair<int,int>>q;
        q.push({src,0});
        vector<int>vis(n,0);
        dist[src]=0;
        vis[src]=1;
        while(q.size()){
            int size=q.size();
            for(int i=0;i<size;i++){
                auto x=q.front();
                q.pop();
                for(auto &t:adj[x.first]){
                    if(vis[t]==0){
                        vis[t]=1;
                        dist[t]=1+x.second;
                        q.push({t,dist[t]});
                    }
                }
            }
        }
        return dist;
    }
};




//SOLVED WITHOUT QUEUE OF PAIR USING DIST VECTOR TO GET SHORTEST DISTANCE OF THAT NODE FROM SOURCE NODE


class Solution {
  public:
    vector<int> shortestPath(vector<vector<int>>& adj, int src) {
        int n=adj.size();
        vector<int>dist(n,-1);
        queue<int>q;
        q.push(src);
        vector<int>vis(n,0);
        dist[src]=0;
        vis[src]=1;
        while(q.size()){
            int size=q.size();
            for(int i=0;i<size;i++){
                int x=q.front();
                q.pop();
                for(auto &t:adj[x]){
                    if(vis[t]==0){
                        vis[t]=1;
                        dist[t]=1+dist[x];
                        q.push(t);
                    }
                }
            }
        }
        return dist;
    }
};
