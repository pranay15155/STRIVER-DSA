class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    int dfs(int node,int parent,vector<int>&vis,vector<int> adj[]){
        vis[node]=1;
        for(auto &x:adj[node]){
            if(vis[x]==0){
                if(dfs(x,node,vis,adj)==1)return 1;
            }
            else if(vis[x]==1 && x!=parent)return 1;
        }
        return 0;
    }
    bool isCycle(int V, vector<int> adj[]) {
        vector<int>vis(V,0);
        for(int i=0;i<V;i++){
            if(vis[i]==0){
                if(dfs(i,-1,vis,adj)==1)return 1;
            }
        }
        return 0;
    }
};
